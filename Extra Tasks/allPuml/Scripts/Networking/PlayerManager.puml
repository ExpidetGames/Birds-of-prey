@startuml
class PlayerManager {
    Awake() : void
    - Update() : void
    + updatePlayerTransforms() : void
    + playerObjectFromId(playerId:string) : GameObject
    + idFromGameObject(playerObject:GameObject) : string
    + shootRocket(target:GameObject, startPoint:Vector3, planeFacingDirection:Vector3, planeVelocity:Vector3, rocketType:RocketTypes) : void
    + shootBullet(startPoint:Vector3, planeFacingDirection:Vector3, planeVelocity:Vector3, bulletType:BulletTypes) : void
    + disconnectPlayer(playerId:string) : void
    - getStringFromList(input:List<string>) : string
}
class "List`1"<T> {
}
class "Dictionary`2"<T1,T2> {
}
MonoBehaviour <|-- PlayerManager
PlayerManager --> "spawnedPlayerIds<string>" "List`1"
PlayerManager --> "allPlayers<string,GameObject>" "Dictionary`2"
PlayerManager --> "ownPlayer" GameObject
PlayerManager --> "instance" GameObject
@enduml
